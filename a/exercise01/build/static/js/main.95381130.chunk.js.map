{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","noteService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","App","useState","notes","setNotes","newNote","setNewNote","errorMessage","setErrorMessage","useEffect","noteServiceAll","initialNotes","Notification","message","Footer","style","color","fontStyle","fontSize","map","index","find","n","changedNote","returnedNote","catch","error","setTimeout","filter","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"0LAYeA,EAVF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UACb,qBAAuB,iBAC7B,OACI,oBAAIC,UAAU,OAAd,SACI,8BAAIJ,EAAKK,QAAT,IAAkB,wBAAQC,QAASL,EAAjB,SAAoCC,U,gBCL5DK,EAAU,aAsBDC,EALK,CAChBC,OAhBW,WAEX,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAezCC,OAZW,SAACC,GAEZ,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAWzCI,OARW,SAACC,EAAIH,GAEhB,OADgBN,IAAMU,IAAN,UAAab,EAAb,YAAwBY,GAAMH,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCuF9BO,EAnGH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwCJ,mBAAS,MAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KAWAC,qBAJa,WACXC,EAAerB,SAASG,MAAK,SAAAmB,GAAkBP,EAASO,QAG1C,IAGhB,IAmBMC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAGP,qBAAK7B,UAAU,QAAf,SACG6B,KAoBHC,EAAS,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2GAKJ,OACE,gCACE,uCACA,cAACN,EAAD,CAAcC,QAASN,IAEvB,6BACGJ,EAAMgB,KAAI,SAACvC,EAAMwC,GAAP,OACT,cAAC,EAAD,CAAkBxC,KAAMA,EACtBC,iBAAkB,kBAnED,SAACkB,GAC1B,IAAMnB,EAAOuB,EAAMkB,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,KAAOA,KAChCwB,EAAW,2BAAQ3C,GAAR,IAAcG,WAAYH,EAAKG,YAEhD2B,EAAeZ,OAAOC,EAAIwB,GACvB/B,MAAK,SAAAgC,GACJpB,EAASD,EAAMgB,KAAI,SAAAvC,GAAI,OAAIA,EAAKmB,KAAKyB,EAAazB,GAAGyB,EAAa5C,SACjE6C,OAAM,SAAAC,GACPlB,EAAgB,SAAD,OACJ5B,EAAKK,QADD,sCAGf0C,YAAW,WACTnB,EAAgB,QACf,KACHJ,EAASD,EAAMyB,QAAO,SAAAN,GAAC,OAAIA,EAAEvB,KAAOA,SAqDR8B,CAAmBjD,EAAKmB,MADvCqB,QAKf,uBAAMU,SAxCM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBhD,QAASoB,GAEXK,EACGf,OAAOsC,GACPzC,MAAK,SAAAgC,GACJpB,EAASD,EAAM+B,OAAOV,IACtBlB,EAAW,QA+Bb,UACE,uBAAO6B,MAAO9B,EAAS+B,SAnFJ,SAACL,GACxBzB,EAAWyB,EAAMM,OAAOF,UAmFpB,wBAAQG,KAAK,SAAb,qBAGF,cAACxB,EAAD,QC7FNyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.95381130.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n    const label = note.important\n        ? 'make not important' : 'make important'\n    return (\n        <li className='note'>\n            <p>{note.content} <button onClick={toggleImportance}>{label}</button></p>\n        </li>\n    )\n}\n\nexport default Note;","import axios from 'axios'\n\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data);\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject);\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst noteService = {\n    getAll: getAll,\n    create: create,\n    update: update\n}\nexport default noteService;","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport noteServiceAll from './services/notes';\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null);\n\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const hook = () => {\n    noteServiceAll.getAll().then(initialNotes => { setNotes(initialNotes) })\n  }\n\n  useEffect(hook, []);\n\n//mark important for each note\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteServiceAll.update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id===returnedNote.id?returnedNote:note))\n      }).catch(error => {\n        setErrorMessage(\n          `Note \"${note.content}\" was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id));\n      })\n  }\n\n  //error message when the use tried to toggle the importance of a deleted note\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\n//adding new note\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote\n    }\n    noteServiceAll\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n//Creating footer component \nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\n    </div>\n  )\n}\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      \n      <ul>\n        {notes.map((note, index) =>\n          <Note key={index} note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)} />\n        )}\n      </ul>\n\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      \n      <Footer />\n    </div>\n  )\n}\n\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}